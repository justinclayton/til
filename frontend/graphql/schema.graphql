type Mutation {
  createPost(input: CreatePostInput!): Post
  deletePost(input: DeletePostInput!): Post
  incrementVoteForPost(id: ID!): Post
  updatePost(input: UpdatePostInput!): Post
}

type Post {
  content: String!
  createdAt: String!
  id: ID!
  votes: Int
}

type PostConnection {
  items: [Post]
  nextToken: String
}

type Query {
  getPost(id: ID!): Post
  listPosts(after: String, first: Int): PostConnection
  post(id: ID!): Post
  posts: [Post]
}

type Subscription {
  onCreatePost(content: String, createdAt: String, id: ID, votes: Int): Post
    @aws_subscribe(mutations: ["createPost"])
  onDeletePost(content: String, createdAt: String, id: ID, votes: Int): Post
    @aws_subscribe(mutations: ["deletePost"])
  onUpdatePost(content: String, createdAt: String, id: ID, votes: Int): Post
    @aws_subscribe(mutations: ["updatePost"])
}

input CreatePostInput {
  content: String!
  createdAt: String
  id: ID
  votes: Int
}

input DeletePostInput {
  id: ID!
}

input UpdatePostInput {
  content: String
  createdAt: String
  id: ID!
  votes: Int
}
